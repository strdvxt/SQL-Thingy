SELECT product_id
FROM Product
WHERE low_fats = 'Y' AND recyclable= 'Y';


select product_id 
from products 
where low_fats = 'Y' and recyclable = 'Y';


//SELF-JOIN
SELECT today.id FROM Weather AS today 
JOIN Weather AS yesterday
ON today.temperature > yesterday.temperature
AND TIMESTAMPDIFF(DAY, yesterday.recordDate, today.recordDate) = 1 //KALAU DI DOC W3 NAMANYA DATEDIFF

Each row of this table indicates the price of the product_id in the period from start_date to end_date.
For each product_id there will be no two overlapping periods. That means there will be no two intersecting periods for the same product_id.

# Write your MySQL query statement below
select p.product_id, round(sum(p.price*u.units)/sum(u.units),2) as average_price
from prices p
left join unitssold u
on p.product_id = u.product_id AND 
u.purchase_date BETWEEN p.Start_date and p.end_date
GROUP BY p.product_id

// cast buat apa? ini no 19. dipahamin lg ya

select query_name, 
round(avg(cast(rating as decimal) / position), 2) as quality, round(sum(case when rating < 3 then 1 else 0 end) * 100 / count(*), 2) as poor_query_percentage
from queries
group by query_name;




HOME WORK :
-SELF JOIN
-SUB-QUERY

conclusion :
- sensitive-case function
- use is instead of =